---
title: "Prepare pc spelling data for analyses"
format: html
---

## Setup
```{r}
library(tidyverse)
library(here)
library(easystats)
```

## Define paths
```{r}
path_raw_data <- here("Data", "Raw", "mspelling")
path_processed_data <- here("Data", "Processed")
```

## Trial level
### Read data

The data was exported from sqlite to csv using the [vscode extension](https://marketplace.visualstudio.com/items?itemName=alexcvzz.vscode-sqlite), but was not altered in any way.

```{r}
csv_files <- list.files(path_raw_data, pattern = "\\.csv$", full.names = TRUE)

data <- csv_files |>
    map_df(read_csv)

head(data)
```

### Initial inspection

Structure of the data
```{r}
data |>
    str()
```

n = 10

Unique participant ids 
```{r}
length(unique(data$participant_id))

unique(data$participant_id)
```

session_number should be 1 for each participant 

```{r}
unique(data$session_number)
```

Let's check number of observation per participant. There should be 24 observations per participant.

```{r}
data |>
    group_by(participant_id) |>
        count(participant_id)
```

### Remove columns we don't need

```{r}
data <- data |>
    select(-id, -session_number)

str(data)
```

### Score trials

```{r}
data <- data |>
    mutate(
        correctness = stim == resp,
        correctness = if_else(
            correctness == TRUE,
            1,
            0
        )
    ) 

head(data)
```

Let's check trials were correctly scored

Check incorrect
```{r}
data |>
    filter(correctness == 0)
```

Check correct

```{r}
data |>
    filter(correctness == 1)
```

### Save data

```{r}
path <- here(path_processed_data, "data_pc_trial_level.csv")
write_csv(data, path)
```

## Participant level 
### Aggregate data

```{r}
data <- data |>
    group_by(participant_id) |>
    summarise(total_correctness = sum(correctness))

head(data)
```

### Check aggregated data

- min and max seem OK
- no missing data
  
```{r}
data |>
    describe_distribution(total_correctness)
```

### Save data

```{r}
path <- here(path_processed_data, 'data_pc_participant_level.csv')

write_csv(data, path)
```